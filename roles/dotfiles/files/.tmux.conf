# Set prefix to space
unbind C-b
set -g prefix C-Space

set-option -g default-shell /usr/local/bin/zsh

# Bindings:
# - to see current bindings:
#   tmux list-keys

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind Left
bind Left select-pane -L
unbind Down
bind Down select-pane -D
unbind Up
bind Up select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind h
bind -r h resize-pane -L 5
unbind l
bind -r l resize-pane -R 5
unbind j
bind -r j resize-pane -D 5
unbind k
bind -r k resize-pane -U 5

# Fast toggle between current and last-used window (normally prefix-l).
bind ^space last-window

# `^space ^space` is awfully close to the destructive `^space space`, which
# trashes the layout. Providea quick way to get back to the previous-used
# layout.
#
# Normally used for previous-window, but I never use that, prefering numeric
# access.
bind p select-layout -o

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Statusbar
set-option -g status on
set-option -g status-left-length 60
set-option -g status-right-length 90

# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# increase scroll-back history
set -g history-limit 4096

# let the window index start with one
set -g base-index 1
set -g pane-base-index 1

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Clipper.
# bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel pbcopy

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward " "

bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Analagous with naked C-l which resets/clears the terminal.
bind-key C-l clear-history

#set-window-option -g mode-keys vi

# show activity in the statusbar
setw -g monitor-activity on
set -g visual-activity on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode-vi v begin-selection
# bind-key -T copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# re-number windows when one is closed
set -g renumber-windows on

# force a reload of the config kile
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Setup mouse in tmux
setw -g mouse on

# enable UTF-8 support in status bar
#set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 60

# center the status bar
set -g status-justify left

###########################
# Colors
###########################

# color status bar
set -g status-style 'bg=#373b41,fg=white,bold,italics'
set -g status-left-length 40
set -g status-left '#[fg=yellow,bold,italics]#S § ' # SECTION SIGN (UTF-8: c2 a7)
set -g status-right "#[fg=yellow,bold,italics]$USER@#h #[fg=green]%l:%M %p"
# set -g status-bg colour235
# set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green
# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# set color of active pane
set -g pane-active-border-fg 8

set-option -g default-command "reattach-to-user-namespace -l zsh"
